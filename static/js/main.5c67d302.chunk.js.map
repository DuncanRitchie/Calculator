{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","Component","state","firstNumber","lastOperation","total","arrayOfButtons","evaluate","this","setState","Number","clickButton","event","buttonClicked","target","id","parentElement","console","log","Math","sqrt","substr","isNaN","toString","push","render","className","Calculator","href","title","props","Display","Buttons","Button","innerHTML","onClick","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c67d302.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  state={\n    firstNumber:0,\n    lastOperation: \"AC\",\n    total: 0,\n    arrayOfButtons: [],\n  }\n\n  evaluate = () => {\n    switch (this.state.lastOperation) {\n      case \"Plus\":\n        this.setState({total:Number(this.state.firstNumber)+Number(this.state.total)});\n        this.setState({firstNumber:Number(this.state.firstNumber)+Number(this.state.total)});\n        break;\n      case \"Minus\":\n        this.setState({total:Number(this.state.firstNumber)-Number(this.state.total)});\n        this.setState({firstNumber:Number(this.state.firstNumber)-Number(this.state.total)});\n        break;\n      case \"Times\":\n        this.setState({total:Number(this.state.firstNumber)*Number(this.state.total)});\n        this.setState({firstNumber:Number(this.state.firstNumber)*Number(this.state.total)});\n        break;\n      case \"Divide\":\n        this.setState({total:Number(this.state.firstNumber)/Number(this.state.total)});\n        this.setState({firstNumber:Number(this.state.firstNumber)/Number(this.state.total)});\n        break;\n      default:\n    }\n  }\n\n  clickButton = (event) => {\n    let buttonClicked;\n    if(event.target.id===\"\") {\n      buttonClicked=event.target.parentElement\n    }\n    else {\n      buttonClicked=event.target\n    }\n    console.log(buttonClicked.id);\n    console.log(this.state.arrayOfButtons);\n    switch (buttonClicked.id) {\n      case \"AC\":\n        this.setState({firstNumber:0});\n        this.setState({total:0});\n        this.setState({lastOperation:\"AC\"});\n        this.setState({arrayOfButtons:[]})\n        break;\n      case \"PlusMinus\":\n        this.setState({total:-1*this.state.total});\n        this.evaluate();\n        break;\n      case \"Percent\":\n        this.setState({total:this.state.total/100});\n        break;\n      case \"SquareRoot\":\n        this.setState({total:Math.sqrt(this.state.total)});\n        break;\n      case \"Point\":\n        this.setState({total:this.state.total+\".\"});\n        break;\n      case \"Divide\":\n        if (this.state.lastOperation!==\"AC\"&&this.state.lastOperation!==\"Equals\") {\n          this.evaluate()\n        }\n        else {this.setState({firstNumber:Number(this.state.total)})}\n        this.setState({lastOperation:\"Divide\"});\n        this.setState({total:\"\"});\n        break;\n      case \"Times\":\n        if (this.state.lastOperation!==\"AC\"&&this.state.lastOperation!==\"Equals\") {\n          this.evaluate()\n        }\n        else {this.setState({firstNumber:Number(this.state.total)})}\n        this.setState({lastOperation:\"Times\"});\n        this.setState({total:\"\"});\n        break;\n      case \"Minus\":\n        if (this.state.lastOperation!==\"AC\"&&this.state.lastOperation!==\"Equals\") {\n          this.evaluate()\n        }\n        else {this.setState({firstNumber:Number(this.state.total)})}\n        this.setState({lastOperation:\"Minus\"});\n        this.setState({total:\"\"});\n        break;\n      case \"Plus\":\n        if (this.state.lastOperation!==\"AC\"&&this.state.lastOperation!==\"Equals\") {\n          this.evaluate()\n        }\n        else {this.setState({firstNumber:Number(this.state.total)})}\n        this.setState({lastOperation:\"Plus\"});\n        this.setState({total:\"\"});\n        break;\n      case \"Equals\":\n        this.evaluate();\n        this.setState({lastOperation:\"Equals\"});\n        break;\n      default:\n    }\n    if (buttonClicked.id.substr(0,6)===\"Button\") {\n      if (this.state.total===0|isNaN(this.state.total)) {\n        this.setState({total:buttonClicked.id.substr(-1)})\n      }\n      else {\n        this.setState({total:this.state.total.toString()+buttonClicked.id.substr(-1)})\n      }\n      this.state.arrayOfButtons.push(buttonClicked.id.substr(-1))\n    }\n    else {\n      this.state.arrayOfButtons.push(buttonClicked.id)\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Duncan&rsquo;s Calculator</h1>\n        <Calculator total={this.state.total} clickButton={this.clickButton}/>\n        <footer>\n          <li>Made by Duncan Ritchie</li>\n          <li><a href=\"https://www.github.com/DuncanRitchie/calculator\" title=\"Code on GitHub\">See the code</a></li>\n          <li><a href=\"https://www.duncanritchie.co.uk\" title=\"My website\">My website</a></li>\n        </footer>\n      </div>\n    );\n  }\n}\n\nconst Calculator = (props) => {\n  return (\n    <div className=\"calculator\">\n      <Display total={props.total}/>\n      <Buttons clickButton={props.clickButton}/>\n    </div>\n  )\n}\n\nconst Display = (props) => {\n  return (\n      <div className=\"display\">\n          <div>\n              {props.total}\n          </div>\n      </div>\n  )\n}\n\nconst Buttons = (props) => {\n  return (\n      <div className=\"buttons\">\n          <Button id=\"AC\" innerHTML=\"AC\" clickButton={props.clickButton}/>\n          <Button id=\"PlusMinus\" innerHTML=\"&plusmn;\" clickButton={props.clickButton}/>\n          <Button id=\"Percent\" innerHTML=\"%\" clickButton={props.clickButton}/>\n          <Button id=\"Divide\" innerHTML=\"&divide;\" clickButton={props.clickButton}/>\n          <Button id=\"Button7\" innerHTML=\"7\" clickButton={props.clickButton}/>\n          <Button id=\"Button8\" innerHTML=\"8\" clickButton={props.clickButton}/>\n          <Button id=\"Button9\" innerHTML=\"9\" clickButton={props.clickButton}/>\n          <Button id=\"Times\" innerHTML=\"&times;\" clickButton={props.clickButton}/>\n          <Button id=\"Button4\" innerHTML=\"4\" clickButton={props.clickButton}/>\n          <Button id=\"Button5\" innerHTML=\"5\" clickButton={props.clickButton}/>\n          <Button id=\"Button6\" innerHTML=\"6\" clickButton={props.clickButton}/>\n          <Button id=\"Minus\" innerHTML=\"-\" clickButton={props.clickButton}/>\n          <Button id=\"Button1\" innerHTML=\"1\" clickButton={props.clickButton}/>\n          <Button id=\"Button2\" innerHTML=\"2\" clickButton={props.clickButton}/>\n          <Button id=\"Button3\" innerHTML=\"3\" clickButton={props.clickButton}/>\n          <Button id=\"Plus\" innerHTML=\"+\" clickButton={props.clickButton}/>\n          <Button id=\"Button0\" innerHTML=\"0\" clickButton={props.clickButton}/>\n          <Button id=\"Point\" innerHTML=\".\" clickButton={props.clickButton}/>\n          <Button id=\"SquareRoot\" innerHTML=\"&radic;\" clickButton={props.clickButton}/>\n          <Button id=\"Equals\" innerHTML=\"=\" clickButton={props.clickButton}/>\n      </div>\n  )\n}\n\nconst Button = (props) => {\n  return (\n      <div className=\"button\" id={props.id} onClick={props.clickButton}>\n        <div>\n            {props.innerHTML}\n        </div>\n      </div>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}