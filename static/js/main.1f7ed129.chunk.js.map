{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","firstNumber","lastOperation","total","arrayOfButtons","evaluate","setState","Number","clickButton","event","buttonClicked","target","id","parentElement","console","log","Math","sqrt","substr","isNaN","toString","push","className","this","href","title","Component","Calculator","props","Display","Buttons","innerHTML","Button","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f7ed129.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state={\r\n    firstNumber:0,\r\n    lastOperation: \"AC\",\r\n    total: 0,\r\n    arrayOfButtons: [],\r\n  }\r\n\r\n  evaluate = () => {\r\n    switch (this.state.lastOperation) {\r\n      case \"Plus\":\r\n        this.setState({total:Number(this.state.firstNumber)+Number(this.state.total)});\r\n        this.setState({firstNumber:Number(this.state.firstNumber)+Number(this.state.total)});\r\n        break;\r\n      case \"Minus\":\r\n        this.setState({total:Number(this.state.firstNumber)-Number(this.state.total)});\r\n        this.setState({firstNumber:Number(this.state.firstNumber)-Number(this.state.total)});\r\n        break;\r\n      case \"Times\":\r\n        this.setState({total:Number(this.state.firstNumber)*Number(this.state.total)});\r\n        this.setState({firstNumber:Number(this.state.firstNumber)*Number(this.state.total)});\r\n        break;\r\n      case \"Divide\":\r\n        this.setState({total:Number(this.state.firstNumber)/Number(this.state.total)});\r\n        this.setState({firstNumber:Number(this.state.firstNumber)/Number(this.state.total)});\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  clickButton = (event) => {\r\n    let buttonClicked;\r\n    if(event.target.id===\"\") {\r\n      buttonClicked=event.target.parentElement\r\n    }\r\n    else {\r\n      buttonClicked=event.target\r\n    }\r\n    console.log(buttonClicked.id);\r\n    console.log(this.state.arrayOfButtons);\r\n    switch (buttonClicked.id) {\r\n      case \"AC\":\r\n        this.setState({firstNumber:0});\r\n        this.setState({total:0});\r\n        this.setState({lastOperation:\"AC\"});\r\n        this.setState({arrayOfButtons:[]})\r\n        break;\r\n      case \"PlusMinus\":\r\n        this.setState({total:-1*this.state.total});\r\n        this.evaluate();\r\n        break;\r\n      case \"Percent\":\r\n        this.setState({total:this.state.total/100});\r\n        break;\r\n      case \"SquareRoot\":\r\n        this.setState({total:Math.sqrt(this.state.total)});\r\n        break;\r\n      case \"Point\":\r\n        this.setState({total:this.state.total+\".\"});\r\n        break;\r\n      case \"Divide\":\r\n        if (this.state.lastOperation!==\"AC\"&&this.state.lastOperation!==\"Equals\") {\r\n          this.evaluate()\r\n        }\r\n        else {this.setState({firstNumber:Number(this.state.total)})}\r\n        this.setState({lastOperation:\"Divide\"});\r\n        this.setState({total:\"\"});\r\n        break;\r\n      case \"Times\":\r\n        if (this.state.lastOperation!==\"AC\"&&this.state.lastOperation!==\"Equals\") {\r\n          this.evaluate()\r\n        }\r\n        else {this.setState({firstNumber:Number(this.state.total)})}\r\n        this.setState({lastOperation:\"Times\"});\r\n        this.setState({total:\"\"});\r\n        break;\r\n      case \"Minus\":\r\n        if (this.state.lastOperation!==\"AC\"&&this.state.lastOperation!==\"Equals\") {\r\n          this.evaluate()\r\n        }\r\n        else {this.setState({firstNumber:Number(this.state.total)})}\r\n        this.setState({lastOperation:\"Minus\"});\r\n        this.setState({total:\"\"});\r\n        break;\r\n      case \"Plus\":\r\n        if (this.state.lastOperation!==\"AC\"&&this.state.lastOperation!==\"Equals\") {\r\n          this.evaluate()\r\n        }\r\n        else {this.setState({firstNumber:Number(this.state.total)})}\r\n        this.setState({lastOperation:\"Plus\"});\r\n        this.setState({total:\"\"});\r\n        break;\r\n      case \"Equals\":\r\n        this.evaluate();\r\n        this.setState({lastOperation:\"Equals\"});\r\n        break;\r\n      default:\r\n    }\r\n    if (buttonClicked.id.substr(0,6)===\"Button\") {\r\n      if (this.state.total===0|isNaN(this.state.total)) {\r\n        this.setState({total:buttonClicked.id.substr(-1)})\r\n      }\r\n      else {\r\n        this.setState({total:this.state.total.toString()+buttonClicked.id.substr(-1)})\r\n      }\r\n      this.state.arrayOfButtons.push(buttonClicked.id.substr(-1))\r\n    }\r\n    else {\r\n      this.state.arrayOfButtons.push(buttonClicked.id)\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Duncan&rsquo;s Calculator</h1>\r\n        <Calculator total={this.state.total} clickButton={this.clickButton}/>\r\n        <footer>\r\n          <li>Made by Duncan Ritchie</li>\r\n          <li><a href=\"https://www.github.com/DuncanRitchie/calculator\" title=\"Code on GitHub\">See the code</a></li>\r\n          <li><a href=\"https://www.duncanritchie.co.uk\" title=\"My website\">My website</a></li>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Calculator = (props) => {\r\n  return (\r\n    <div className=\"calculator\">\r\n      <Display total={props.total}/>\r\n      <Buttons clickButton={props.clickButton}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Display = (props) => {\r\n  return (\r\n      <div className=\"display\">\r\n          <div>\r\n              {props.total}\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nconst Buttons = (props) => {\r\n  return (\r\n      <div className=\"buttons\">\r\n          <Button id=\"AC\" innerHTML=\"AC\" clickButton={props.clickButton}/>\r\n          <Button id=\"PlusMinus\" innerHTML=\"&plusmn;\" clickButton={props.clickButton}/>\r\n          <Button id=\"Percent\" innerHTML=\"%\" clickButton={props.clickButton}/>\r\n          <Button id=\"Divide\" innerHTML=\"&divide;\" clickButton={props.clickButton}/>\r\n          <Button id=\"Button7\" innerHTML=\"7\" clickButton={props.clickButton}/>\r\n          <Button id=\"Button8\" innerHTML=\"8\" clickButton={props.clickButton}/>\r\n          <Button id=\"Button9\" innerHTML=\"9\" clickButton={props.clickButton}/>\r\n          <Button id=\"Times\" innerHTML=\"&times;\" clickButton={props.clickButton}/>\r\n          <Button id=\"Button4\" innerHTML=\"4\" clickButton={props.clickButton}/>\r\n          <Button id=\"Button5\" innerHTML=\"5\" clickButton={props.clickButton}/>\r\n          <Button id=\"Button6\" innerHTML=\"6\" clickButton={props.clickButton}/>\r\n          <Button id=\"Minus\" innerHTML=\"-\" clickButton={props.clickButton}/>\r\n          <Button id=\"Button1\" innerHTML=\"1\" clickButton={props.clickButton}/>\r\n          <Button id=\"Button2\" innerHTML=\"2\" clickButton={props.clickButton}/>\r\n          <Button id=\"Button3\" innerHTML=\"3\" clickButton={props.clickButton}/>\r\n          <Button id=\"Plus\" innerHTML=\"+\" clickButton={props.clickButton}/>\r\n          <Button id=\"Button0\" innerHTML=\"0\" clickButton={props.clickButton}/>\r\n          <Button id=\"Point\" innerHTML=\".\" clickButton={props.clickButton}/>\r\n          <Button id=\"SquareRoot\" innerHTML=\"&radic;\" clickButton={props.clickButton}/>\r\n          <Button id=\"Equals\" innerHTML=\"=\" clickButton={props.clickButton}/>\r\n      </div>\r\n  )\r\n}\r\n\r\nconst Button = (props) => {\r\n  return (\r\n      <div className=\"button\" id={props.id} onClick={props.clickButton}>\r\n        <div>\r\n            {props.innerHTML}\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}